---
- name: "Deploy Monitoring Stack (Prometheus + Grafana)"
  hosts: masters
  become: yes
  vars:
    grafana_admin_password: "z123456789z"
    prometheus_namespace: "monitoring"
    
  tasks:

    - name: "Check if monitoring namespace exists"
      command: kubectl get namespace {{ prometheus_namespace }}
      register: ns_check
      ignore_errors: yes
      changed_when: false

    - name: "Create monitoring namespace if not exists"
      command: kubectl create namespace {{ prometheus_namespace }}
      when: ns_check.rc != 0

    - name: "Add Prometheus Helm repo"
      command: "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
      changed_when: false

    - name: "Add Grafana Helm repo"
      command: "helm repo add grafana https://grafana.github.io/helm-charts"
      changed_when: false

    - name: "Update Helm repos"
      command: "helm repo update"
      changed_when: false

    - name: "Install kube-prometheus-stack"
      command: >
        helm upgrade --install kube-prometheus prometheus-community/kube-prometheus-stack
        --namespace {{ prometheus_namespace }}
        --create-namespace
        --set grafana.adminPassword={{ grafana_admin_password }}
        --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false
      register: prometheus_install
      changed_when: "'STATUS: deployed' in prometheus_install.stdout"

    - name: "Patch Grafana service to NodePort"
      command: >
        kubectl patch svc kube-prometheus-grafana -n {{ prometheus_namespace }}
        -p '{"spec": {"type": "NodePort", "ports": [{"name": "http", "port": 3000, "targetPort": 3000, "nodePort": 32000}]}}'
      register: patch_result
      failed_when: 
        - patch_result.rc != 0
        - "'NotFound' not in patch_result.stderr"