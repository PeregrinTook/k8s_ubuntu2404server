---
- name: 01 Prepare all nodes for Kubernetes cluster
  hosts: all
  become: true
  vars_files:
    - vars.yml

  tasks:
    # ============ Ensure cloud-init is done
    - name: Wait for cloud-init to complete
      ansible.builtin.command:
        cmd: cloud-init status --wait
      changed_when: false
      tags: [init, bootstrap]

    # ============ System updates
    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: true
      changed_when: false
      tags: [system_update]

    # ============ Install common tools
    - name: Install essential packages
      ansible.builtin.apt:
        name: "{{ common_system_packages }}"
        state: present
      register: pkg_install
      retries: 3
      delay: 10
      changed_when: pkg_install.changed
      tags: [packages]

    # ============ Confirm packages are installed
    - name: Verify installed packages
      ansible.builtin.command: dpkg -l "{{ item }}"
      loop: "{{ common_system_packages }}"
      changed_when: false
      tags: [verify]

    # ============ Upgrade existing packages
    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist
      register: pkg_upgrade
      environment:
        DEBIAN_FRONTEND: noninteractive
      changed_when: pkg_upgrade.get('changed', False)
      tags: [system_update, bootstrap]

    # ============ Clean up package cache
    - name: Clean package cache
      ansible.builtin.apt:
        autoclean: true
      register: cache_clean
      changed_when: "'Cleaned' in cache_clean.stdout"
      tags: [cleanup]

    # ============ Disable swap (required for Kubernetes)
    - name: Permanently disable swap
      block:
        - name: Check swap status
          ansible.builtin.command: swapon --show
          register: swap_status
          changed_when: false
          ignore_errors: true

        - name: Disable active swap
          ansible.builtin.command: swapoff -a
          when: swap_status.stdout != ""

        - name: Remove swap from fstab
          ansible.builtin.replace:
            path: /etc/fstab
            regexp: '^([^#].*\sswap\s.*)'
            replace: '# \1'
            backup: true
      tags: [system_config, bootstrap]

    # ============ Add cluster nodes to /etc/hosts
    - name: Configure host entries
      ansible.builtin.blockinfile:
        path: /etc/hosts
        marker: "# {mark} K8S CLUSTER NODES"
        block: |
          {% for host in groups['all'] %}
          {{ hostvars[host]['ansible_host'] }} {{ host }} {{ host.split('.')[0] }}
          {% endfor %}
        state: present
        backup: true
      register: hosts_file
      changed_when: hosts_file.changed
      tags: [networking, bootstrap]
